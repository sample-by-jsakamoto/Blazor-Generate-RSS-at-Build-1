@using System.ServiceModel.Syndication;
@using System.Xml
@inject HttpClient Http

@foreach (var feed in this._feeds)
{
    <h1>@feed.Title.Text</h1>

    <p>@feed.Description.Text</p>

    <QuickGrid Items="(feed.Items ?? []).AsQueryable()">
        <PropertyColumn Title="Id" Property="@(item => item.Id)" />
        <PropertyColumn Title="Title" Property="@(item => item.Title.Text)" />
        <PropertyColumn Title="Content" Property="@(item => item.Summary.Text)" />
        <TemplateColumn Title="Link" Context="item">
            @{
                var url = item.Links.FirstOrDefault()?.Uri;
            }
            <a href="@url" target="_blank">@url</a>
        </TemplateColumn>
        <PropertyColumn Title="Last Update" Property="@(item => item.LastUpdatedTime)" />
    </QuickGrid>
}

@code {

    private List<SyndicationFeed> _feeds = [];

    protected override async Task OnInitializedAsync()
    {
        var feedPaths = new[]
        {
            "./_content/RazorClassLibrary1/feed1.xml",
            "./_content/RazorClassLibrary2/feed2.xml",
        };

        foreach (var feedPath in feedPaths)
        {
            using var feedXmlStream = await Http.GetStreamAsync(feedPath);
            using var reader = XmlReader.Create(feedXmlStream);
            var feed = SyndicationFeed.Load(reader);
            _feeds.Add(feed);
        }
    }
}